[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "book",
    "section": "",
    "text": "1 book index"
  },
  {
    "objectID": "intro/visualization/index.html#raw-html",
    "href": "intro/visualization/index.html#raw-html",
    "title": "2  Visualization",
    "section": "2.1 Raw html",
    "text": "2.1 Raw html\n\n(-> \"<p>Hello, <i>Noj</i>.</p>\"\n    vis/raw-html)\n\n\n\n\n\n\n\n(-> [:svg {:height 210\n           :width 500}\n     [:line {:x1 0\n             :y1 0\n             :x2 200\n             :y2 200\n             :style \"stroke:rgb(255,0,0);stroke-width:2\"}]]\n    hiccup/html\n    vis/raw-html)"
  },
  {
    "objectID": "intro/visualization/index.html#visualizing-datases-with-hanami",
    "href": "intro/visualization/index.html#visualizing-datases-with-hanami",
    "title": "2  Visualization",
    "section": "2.2 Visualizing datases with Hanami",
    "text": "2.2 Visualizing datases with Hanami\nNoj offers a few convenience functions to make Hanami plotting work smoothly with Tablecloth and Kindly.\n\n(def random-walk\n  (let [n 20]\n    (-> {:x (range n)\n         :y (->> (repeatedly n #(- (rand) 0.5))\n                 (reductions +))}\n        tc/dataset)))\n\n\n2.2.1 A simple plot\nWe can plot a Tablecloth datasete using a Hanami template:\n\n(-> random-walk\n    (vis/hanami-plot ht/point-chart\n                     {:MSIZE 200}))\n\n\n\nvega\n\n\n\nLet us look inside the resulting vega-lite space. We can see the dataset is included as CSV:\n\n(-> random-walk\n    (vis/hanami-plot ht/point-chart\n                     {:MSIZE 200})\n    kind/pprint)\n\n\n{:encoding\n {:y {:field \"y\", :type \"quantitative\"},\n  :x {:field \"x\", :type \"quantitative\"}},\n :mark {:type \"circle\", :size 200, :tooltip true},\n :width 400,\n :background \"floralwhite\",\n :height 300,\n :data\n {:values\n  \"x,y\\n0,-0.48725452619284104\\n1,-0.9357756242704616\\n2,-0.5162157965228245\\n3,-0.5033668121885043\\n4,-0.7282399189059219\\n5,-0.29348226638446606\\n6,-0.32485876501743083\\n7,-0.586144618442187\\n8,-1.044364842252518\\n9,-1.5204054650466081\\n10,-1.7345414885980897\\n11,-2.205030747033704\\n12,-1.8189485337328128\\n13,-1.8921343733162326\\n14,-2.0394013610712345\\n15,-1.7576615024870215\\n16,-1.285046660281881\\n17,-0.8247912561508186\\n18,-0.4460232250092744\\n19,-0.5827194166079672\\n\",\n  :format {:type \"csv\"}}}\n\n\n\n2.2.2 Additional Hanami templates\nThe scicloj.noj.v1.vis.hanami.templates namespace add Hanami templates to Hanami’s own collection.\n\n(-> datasets/mtcars\n    (vis/hanami-plot vht/boxplot-chart\n                     {:X :gear\n                      :XTYPE :nominal\n                      :Y :mpg}))\n\n\n\nvega\n\n\n\n\n\n2.2.3 Layers\n\n(-> random-walk\n    (vis/hanami-layers\n     {:TITLE \"points and a line\"}\n     [(vis/hanami-plot nil\n                       ht/point-chart\n                       {:MSIZE 400})\n      (vis/hanami-plot nil\n                       ht/line-chart\n                       {:MSIZE 4\n                        :MCOLOR \"brown\"})]))\n\n\n\nvega\n\n\n\n\n\n2.2.4 Concatenation\n\n(-> random-walk\n    (vis/hanami-vconcat\n     {}\n     [(vis/hanami-plot nil\n                       ht/point-chart\n                       {:MSIZE 400\n                        :HEIGHT 100\n                        :WIDTH 100})\n      (vis/hanami-plot nil\n                       ht/line-chart\n                       {:MSIZE 4\n                        :MCOLOR \"brown\"\n                        :HEIGHT 100\n                        :WIDTH 100})]))\n\n\n\nvega\n\n\n\n\n(-> random-walk\n    (vis/hanami-hconcat\n     {}\n     [(vis/hanami-plot nil\n                       ht/point-chart\n                       {:MSIZE 400\n                        :HEIGHT 100\n                        :WIDTH 100})\n      (vis/hanami-plot nil\n                       ht/line-chart\n                       {:MSIZE 4\n                        :MCOLOR \"brown\"\n                        :HEIGHT 100\n                        :WIDTH 100})]))\n\n\n\nvega\n\n\n\n\n\n2.2.5 Linear regression\n\n(-> datasets/mtcars\n    (stats/add-predictions :mpg [:wt]\n                           {:model-type :smile.regression/ordinary-least-square})\n    (vis/hanami-layers {}\n                       [(vis/hanami-plot nil\n                                         ht/point-chart\n                                         {:X :wt\n                                          :Y :mpg\n                                          :MSIZE 200\n                                          :HEIGHT 200\n                                          :WIDTH 200})\n                        (vis/hanami-plot nil\n                                         ht/line-chart\n                                         {:X :wt\n                                          :Y :mpg-prediction\n                                          :MSIZE 5\n                                          :MCOLOR \"purple\"\n                                          :YTITLE :mpg})]))\n\n\n\nvega\n\n\n\n\n\n2.2.6 Histogram\n\n(-> datasets/iris\n    (vis/hanami-histogram :sepal-width\n                          {:nbins 10}))\n\n\n\nvega\n\n\n\n\n\n2.2.7 Combining a few things together\nThe following is inspired by the example at Plotnine’s main page. Note how we add regression lines here. We take care of layout and colouring on our side, not using Vega-Lite for that.\n\n(let [pallete (->> :accent\n                   color/palette\n                   (mapv color/format-hex))]\n  (-> datasets/mtcars\n      (tc/group-by :gear {:result-type :as-map})\n      (->> (sort-by key)\n           (map-indexed\n            (fn [i [group-name ds]]\n              (-> ds\n                  (stats/add-predictions :mpg [:wt]\n                                         {:model-type :smile.regression/ordinary-least-square})\n                  (tc/select-columns [:gear :wt :mpg :mpg-prediction])\n                  (vis/hanami-layers {:TITLE (str \"grear=\" group-name)}\n                                     [(vis/hanami-plot nil\n                                                       ht/point-chart\n                                                       {:X :wt\n                                                        :Y :mpg\n                                                        :MSIZE 200\n                                                        :MCOLOR (pallete i)\n                                                        :HEIGHT 200\n                                                        :WIDTH 200})\n                                      (vis/hanami-plot nil\n                                                       ht/line-chart\n                                                       {:X :wt\n                                                        :Y :mpg-prediction\n                                                        :MSIZE 5\n                                                        :MCOLOR (pallete i)\n                                                        :YTITLE :mpg})]\n                                     ))))\n           (vis/hanami-vconcat nil {}))))\n\n\n\nvega\n\n\n\nA similar example with histograms:\n\n(let [pallete (->> :accent\n                   color/palette\n                   (mapv color/format-hex))]\n  (-> datasets/iris\n      (tc/group-by :species {:result-type :as-map})\n      (->> (sort-by key)\n           (map-indexed\n            (fn [i [group-name ds]]\n              (-> ds\n                  (vis/hanami-histogram :sepal-width\n                                        {:nbins 10}))))\n           (vis/hanami-vconcat nil {}))))\n\n\n\nvega\n\n\n\nScatterplots and regression lines again, this time using Vega-Lite for layout and coloring (using its “facet” option).\n\n(-> datasets/mtcars\n    (tc/group-by [:gear])\n    (stats/add-predictions :mpg [:wt]\n                           {:model-type :smile.regression/ordinary-least-square})\n    (tc/ungroup)\n    (tc/select-columns [:gear :wt :mpg :mpg-prediction])\n    (vis/hanami-layers {}\n                       [(vis/hanami-plot nil\n                                         ht/point-chart\n                                         {:X :wt\n                                          :Y :mpg\n                                          :MSIZE 200\n                                          :COLOR \"gear\"\n                                          :HEIGHT 100\n                                          :WIDTH 200})\n                        (vis/hanami-plot nil\n                                         ht/line-chart\n                                         {:X :wt\n                                          :Y :mpg-prediction\n                                          :MSIZE 5\n                                          :COLOR \"gear\"\n                                          :YTITLE :mpg})])\n    ((fn [spec]\n       {:facet {:row {:field \"gear\"}}\n        :spec (dissoc spec :data)\n        :data (:data spec)}))\n    kind/vega-lite)\n\n\n\nvega\n\n\n\n\n:bye\n\n\n:bye\n\n\n\n\n\nsource: /home/daslu/projects/scicloj/noj/notebooks/intro/visualization.clj"
  },
  {
    "objectID": "intro/datasets/index.html",
    "href": "intro/datasets/index.html",
    "title": "3  Datasets",
    "section": "",
    "text": "(ns intro.datasets\n  (:require [scicloj.noj.v1.datasets :as datasets]))\n\n\ndatasets/iris\n\n\n\n\n\n\n_unnamed [150 5]:\n\n\n\n\n\n\n:sepal-length\n\n\n:sepal-width\n\n\n:petal-length\n\n\n:petal-width\n\n\n:species\n\n\n\n\n\n\n5.1\n\n\n3.5\n\n\n1.4\n\n\n0.2\n\n\nsetosa\n\n\n\n\n4.9\n\n\n3.0\n\n\n1.4\n\n\n0.2\n\n\nsetosa\n\n\n\n\n4.7\n\n\n3.2\n\n\n1.3\n\n\n0.2\n\n\nsetosa\n\n\n\n\n4.6\n\n\n3.1\n\n\n1.5\n\n\n0.2\n\n\nsetosa\n\n\n\n\n5.0\n\n\n3.6\n\n\n1.4\n\n\n0.2\n\n\nsetosa\n\n\n\n\n5.4\n\n\n3.9\n\n\n1.7\n\n\n0.4\n\n\nsetosa\n\n\n\n\n4.6\n\n\n3.4\n\n\n1.4\n\n\n0.3\n\n\nsetosa\n\n\n\n\n5.0\n\n\n3.4\n\n\n1.5\n\n\n0.2\n\n\nsetosa\n\n\n\n\n4.4\n\n\n2.9\n\n\n1.4\n\n\n0.2\n\n\nsetosa\n\n\n\n\n4.9\n\n\n3.1\n\n\n1.5\n\n\n0.1\n\n\nsetosa\n\n\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n\n\n6.9\n\n\n3.1\n\n\n5.4\n\n\n2.1\n\n\nvirginica\n\n\n\n\n6.7\n\n\n3.1\n\n\n5.6\n\n\n2.4\n\n\nvirginica\n\n\n\n\n6.9\n\n\n3.1\n\n\n5.1\n\n\n2.3\n\n\nvirginica\n\n\n\n\n5.8\n\n\n2.7\n\n\n5.1\n\n\n1.9\n\n\nvirginica\n\n\n\n\n6.8\n\n\n3.2\n\n\n5.9\n\n\n2.3\n\n\nvirginica\n\n\n\n\n6.7\n\n\n3.3\n\n\n5.7\n\n\n2.5\n\n\nvirginica\n\n\n\n\n6.7\n\n\n3.0\n\n\n5.2\n\n\n2.3\n\n\nvirginica\n\n\n\n\n6.3\n\n\n2.5\n\n\n5.0\n\n\n1.9\n\n\nvirginica\n\n\n\n\n6.5\n\n\n3.0\n\n\n5.2\n\n\n2.0\n\n\nvirginica\n\n\n\n\n6.2\n\n\n3.4\n\n\n5.4\n\n\n2.3\n\n\nvirginica\n\n\n\n\n5.9\n\n\n3.0\n\n\n5.1\n\n\n1.8\n\n\nvirginica\n\n\n\n\n\n\n\n\n\n\ndatasets/mtcars\n\n\n\n\n\n\n_unnamed [32 12]:\n\n\n\n\n\n\n:name\n\n\n:mpg\n\n\n:cyl\n\n\n:disp\n\n\n:hp\n\n\n:drat\n\n\n:wt\n\n\n:qsec\n\n\n:vs\n\n\n:am\n\n\n:gear\n\n\n:carb\n\n\n\n\n\n\nMazda RX4\n\n\n21.0\n\n\n6\n\n\n160.0\n\n\n110\n\n\n3.90\n\n\n2.620\n\n\n16.46\n\n\n0\n\n\n1\n\n\n4\n\n\n4\n\n\n\n\nMazda RX4 Wag\n\n\n21.0\n\n\n6\n\n\n160.0\n\n\n110\n\n\n3.90\n\n\n2.875\n\n\n17.02\n\n\n0\n\n\n1\n\n\n4\n\n\n4\n\n\n\n\nDatsun 710\n\n\n22.8\n\n\n4\n\n\n108.0\n\n\n93\n\n\n3.85\n\n\n2.320\n\n\n18.61\n\n\n1\n\n\n1\n\n\n4\n\n\n1\n\n\n\n\nHornet 4 Drive\n\n\n21.4\n\n\n6\n\n\n258.0\n\n\n110\n\n\n3.08\n\n\n3.215\n\n\n19.44\n\n\n1\n\n\n0\n\n\n3\n\n\n1\n\n\n\n\nHornet Sportabout\n\n\n18.7\n\n\n8\n\n\n360.0\n\n\n175\n\n\n3.15\n\n\n3.440\n\n\n17.02\n\n\n0\n\n\n0\n\n\n3\n\n\n2\n\n\n\n\nValiant\n\n\n18.1\n\n\n6\n\n\n225.0\n\n\n105\n\n\n2.76\n\n\n3.460\n\n\n20.22\n\n\n1\n\n\n0\n\n\n3\n\n\n1\n\n\n\n\nDuster 360\n\n\n14.3\n\n\n8\n\n\n360.0\n\n\n245\n\n\n3.21\n\n\n3.570\n\n\n15.84\n\n\n0\n\n\n0\n\n\n3\n\n\n4\n\n\n\n\nMerc 240D\n\n\n24.4\n\n\n4\n\n\n146.7\n\n\n62\n\n\n3.69\n\n\n3.190\n\n\n20.00\n\n\n1\n\n\n0\n\n\n4\n\n\n2\n\n\n\n\nMerc 230\n\n\n22.8\n\n\n4\n\n\n140.8\n\n\n95\n\n\n3.92\n\n\n3.150\n\n\n22.90\n\n\n1\n\n\n0\n\n\n4\n\n\n2\n\n\n\n\nMerc 280\n\n\n19.2\n\n\n6\n\n\n167.6\n\n\n123\n\n\n3.92\n\n\n3.440\n\n\n18.30\n\n\n1\n\n\n0\n\n\n4\n\n\n4\n\n\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n\n\nDodge Challenger\n\n\n15.5\n\n\n8\n\n\n318.0\n\n\n150\n\n\n2.76\n\n\n3.520\n\n\n16.87\n\n\n0\n\n\n0\n\n\n3\n\n\n2\n\n\n\n\nAMC Javelin\n\n\n15.2\n\n\n8\n\n\n304.0\n\n\n150\n\n\n3.15\n\n\n3.435\n\n\n17.30\n\n\n0\n\n\n0\n\n\n3\n\n\n2\n\n\n\n\nCamaro Z28\n\n\n13.3\n\n\n8\n\n\n350.0\n\n\n245\n\n\n3.73\n\n\n3.840\n\n\n15.41\n\n\n0\n\n\n0\n\n\n3\n\n\n4\n\n\n\n\nPontiac Firebird\n\n\n19.2\n\n\n8\n\n\n400.0\n\n\n175\n\n\n3.08\n\n\n3.845\n\n\n17.05\n\n\n0\n\n\n0\n\n\n3\n\n\n2\n\n\n\n\nFiat X1-9\n\n\n27.3\n\n\n4\n\n\n79.0\n\n\n66\n\n\n4.08\n\n\n1.935\n\n\n18.90\n\n\n1\n\n\n1\n\n\n4\n\n\n1\n\n\n\n\nPorsche 914-2\n\n\n26.0\n\n\n4\n\n\n120.3\n\n\n91\n\n\n4.43\n\n\n2.140\n\n\n16.70\n\n\n0\n\n\n1\n\n\n5\n\n\n2\n\n\n\n\nLotus Europa\n\n\n30.4\n\n\n4\n\n\n95.1\n\n\n113\n\n\n3.77\n\n\n1.513\n\n\n16.90\n\n\n1\n\n\n1\n\n\n5\n\n\n2\n\n\n\n\nFord Pantera L\n\n\n15.8\n\n\n8\n\n\n351.0\n\n\n264\n\n\n4.22\n\n\n3.170\n\n\n14.50\n\n\n0\n\n\n1\n\n\n5\n\n\n4\n\n\n\n\nFerrari Dino\n\n\n19.7\n\n\n6\n\n\n145.0\n\n\n175\n\n\n3.62\n\n\n2.770\n\n\n15.50\n\n\n0\n\n\n1\n\n\n5\n\n\n6\n\n\n\n\nMaserati Bora\n\n\n15.0\n\n\n8\n\n\n301.0\n\n\n335\n\n\n3.54\n\n\n3.570\n\n\n14.60\n\n\n0\n\n\n1\n\n\n5\n\n\n8\n\n\n\n\nVolvo 142E\n\n\n21.4\n\n\n4\n\n\n121.0\n\n\n109\n\n\n4.11\n\n\n2.780\n\n\n18.60\n\n\n1\n\n\n1\n\n\n4\n\n\n2\n\n\n\n\n\n\n\n\n\n\ndatasets/diamonds\n\n\n\n\n\n\n_unnamed [53940 10]:\n\n\n\n\n\n\n:carat\n\n\n:cut\n\n\n:color\n\n\n:clarity\n\n\n:depth\n\n\n:table\n\n\n:price\n\n\n:x\n\n\n:y\n\n\n:z\n\n\n\n\n\n\n0.23\n\n\nIdeal\n\n\nE\n\n\nSI2\n\n\n61.5\n\n\n55.0\n\n\n326\n\n\n3.95\n\n\n3.98\n\n\n2.43\n\n\n\n\n0.21\n\n\nPremium\n\n\nE\n\n\nSI1\n\n\n59.8\n\n\n61.0\n\n\n326\n\n\n3.89\n\n\n3.84\n\n\n2.31\n\n\n\n\n0.23\n\n\nGood\n\n\nE\n\n\nVS1\n\n\n56.9\n\n\n65.0\n\n\n327\n\n\n4.05\n\n\n4.07\n\n\n2.31\n\n\n\n\n0.29\n\n\nPremium\n\n\nI\n\n\nVS2\n\n\n62.4\n\n\n58.0\n\n\n334\n\n\n4.20\n\n\n4.23\n\n\n2.63\n\n\n\n\n0.31\n\n\nGood\n\n\nJ\n\n\nSI2\n\n\n63.3\n\n\n58.0\n\n\n335\n\n\n4.34\n\n\n4.35\n\n\n2.75\n\n\n\n\n0.24\n\n\nVery Good\n\n\nJ\n\n\nVVS2\n\n\n62.8\n\n\n57.0\n\n\n336\n\n\n3.94\n\n\n3.96\n\n\n2.48\n\n\n\n\n0.24\n\n\nVery Good\n\n\nI\n\n\nVVS1\n\n\n62.3\n\n\n57.0\n\n\n336\n\n\n3.95\n\n\n3.98\n\n\n2.47\n\n\n\n\n0.26\n\n\nVery Good\n\n\nH\n\n\nSI1\n\n\n61.9\n\n\n55.0\n\n\n337\n\n\n4.07\n\n\n4.11\n\n\n2.53\n\n\n\n\n0.22\n\n\nFair\n\n\nE\n\n\nVS2\n\n\n65.1\n\n\n61.0\n\n\n337\n\n\n3.87\n\n\n3.78\n\n\n2.49\n\n\n\n\n0.23\n\n\nVery Good\n\n\nH\n\n\nVS1\n\n\n59.4\n\n\n61.0\n\n\n338\n\n\n4.00\n\n\n4.05\n\n\n2.39\n\n\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n\n\n0.71\n\n\nIdeal\n\n\nG\n\n\nVS1\n\n\n61.4\n\n\n56.0\n\n\n2756\n\n\n5.76\n\n\n5.73\n\n\n3.53\n\n\n\n\n0.71\n\n\nPremium\n\n\nE\n\n\nSI1\n\n\n60.5\n\n\n55.0\n\n\n2756\n\n\n5.79\n\n\n5.74\n\n\n3.49\n\n\n\n\n0.71\n\n\nPremium\n\n\nF\n\n\nSI1\n\n\n59.8\n\n\n62.0\n\n\n2756\n\n\n5.74\n\n\n5.73\n\n\n3.43\n\n\n\n\n0.70\n\n\nVery Good\n\n\nE\n\n\nVS2\n\n\n60.5\n\n\n59.0\n\n\n2757\n\n\n5.71\n\n\n5.76\n\n\n3.47\n\n\n\n\n0.70\n\n\nVery Good\n\n\nE\n\n\nVS2\n\n\n61.2\n\n\n59.0\n\n\n2757\n\n\n5.69\n\n\n5.72\n\n\n3.49\n\n\n\n\n0.72\n\n\nPremium\n\n\nD\n\n\nSI1\n\n\n62.7\n\n\n59.0\n\n\n2757\n\n\n5.69\n\n\n5.73\n\n\n3.58\n\n\n\n\n0.72\n\n\nIdeal\n\n\nD\n\n\nSI1\n\n\n60.8\n\n\n57.0\n\n\n2757\n\n\n5.75\n\n\n5.76\n\n\n3.50\n\n\n\n\n0.72\n\n\nGood\n\n\nD\n\n\nSI1\n\n\n63.1\n\n\n55.0\n\n\n2757\n\n\n5.69\n\n\n5.75\n\n\n3.61\n\n\n\n\n0.70\n\n\nVery Good\n\n\nD\n\n\nSI1\n\n\n62.8\n\n\n60.0\n\n\n2757\n\n\n5.66\n\n\n5.68\n\n\n3.56\n\n\n\n\n0.86\n\n\nPremium\n\n\nH\n\n\nSI2\n\n\n61.0\n\n\n58.0\n\n\n2757\n\n\n6.15\n\n\n6.12\n\n\n3.74\n\n\n\n\n0.75\n\n\nIdeal\n\n\nD\n\n\nSI2\n\n\n62.2\n\n\n55.0\n\n\n2757\n\n\n5.83\n\n\n5.87\n\n\n3.64\n\n\n\n\n\n\n\n\n\n\n\n\n\nsource: /home/daslu/projects/scicloj/noj/notebooks/intro/datasets.clj"
  }
]