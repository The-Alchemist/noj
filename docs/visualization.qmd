
---
format:
  html:
    toc: true
    toc-depth: 4
    theme: [cosmo, notebooks/custom.scss]
    output-file: visualization.html
code-block-background: true
include-in-header: {text: '<link rel = "icon" href = "data:," />'}
fontsize: 0.9em

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style>
<script src="visualization_files/md-default6.js" type="text/javascript"></script><script src="visualization_files/md-default7.js" type="text/javascript"></script><script src="visualization_files/vega8.js" type="text/javascript"></script><script src="visualization_files/vega9.js" type="text/javascript"></script><script src="visualization_files/vega10.js" type="text/javascript"></script>

# Visualization


::: {.sourceClojure}
```clojure
(ns visualization
  (:require [tablecloth.api :as tc]
            [aerial.hanami.common :as hc]
            [aerial.hanami.templates :as ht]
            [scicloj.noj.v1.vis.hanami.templates :as vht]
            [scicloj.noj.v1.vis.hanami :as vis.hanami]
            [tech.v3.datatype :as dtype]
            [tech.v3.datatype.functional :as fun]
            [scicloj.kindly.v4.api :as kindly]
            [scicloj.kindly.v4.kind :as kind]
            [hiccup.core :as hiccup]
            [clojure2d.color :as color]
            [datasets]))
```
:::



## Visualizing datases with Hanami

Noj offers a few convenience functions to make [Hanami](https://github.com/jsa-aerial/hanami) plotting work smoothly with [Tablecloth](https://scicloj.github.io/tablecloth/) and [Kindly](https://scicloj.github.io/kindly/).


::: {.sourceClojure}
```clojure
(def random-walk
  (let [n 20]
    (-> {:x (range n)
         :y (->> (repeatedly n #(- (rand) 0.5))
                 (reductions +))}
        tc/dataset)))
```
:::



### A simple plot

We can plot a Tablecloth datasete using a Hanami template:


::: {.sourceClojure}
```clojure
(-> random-walk
    (vis.hanami/plot ht/point-chart
                 {:MSIZE 200}))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"circle","size":200,"tooltip":true},"width":400,"background":"floralwhite","height":300,"data":{"url":"visualization_files\/0.csv","format":{"type":"csv"}}});</script></div>
```


Let us look inside the resulting vega-lite space. We can see the dataset is included as CSV:


::: {.sourceClojure}
```clojure
(-> random-walk
    (vis.hanami/plot ht/point-chart
                     {:MSIZE 200})
    kind/pprint)
```
:::



::: {.printedClojure}
```clojure
{:encoding
 {:y {:field "y", :type "quantitative"},
  :x {:field "x", :type "quantitative"}},
 :usermeta {:embedOptions {:renderer :svg}},
 :mark {:type "circle", :size 200, :tooltip true},
 :width 400,
 :background "floralwhite",
 :height 300,
 :data
 {:values
  "x,y\n0,0.18944000598664978\n1,-0.13094824689977014\n2,-0.41168493193286537\n3,-0.208733095687353\n4,0.18944444410630634\n5,0.01691569531041648\n6,-0.011393138062447905\n7,0.3257381890631419\n8,0.49366768251626125\n9,0.30295394177899027\n10,-0.10436110673634003\n11,0.13769935965237\n12,0.25554035399185426\n13,-0.12821356015550744\n14,-0.5184935131322956\n15,-0.5704200309670744\n16,-0.3927097323124038\n17,0.08704738652187383\n18,0.02490965728938943\n19,0.38205550166238855\n",
  :format {:type "csv"}}}

```
:::



### Additional Hanami templates

The `scicloj.noj.v1.vis.hanami.templates` namespace add Hanami templates to Hanami's own collection.


::: {.sourceClojure}
```clojure
(-> datasets/mtcars
    (vis.hanami/plot vht/boxplot-chart
                     {:X :gear
                      :XTYPE :nominal
                      :Y :mpg}))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"mpg","type":"quantitative"},"x":{"field":"gear","type":"nominal"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"boxplot","tooltip":true},"width":400,"background":"floralwhite","height":300,"data":{"url":"visualization_files\/1.csv","format":{"type":"csv"}}});</script></div>
```



::: {.sourceClojure}
```clojure
(-> datasets/iris
    (vis.hanami/plot vht/rule-chart
                     {:X :sepal-width
                      :Y :sepal-length
                      :X2 :petal-width
                      :Y2 :petal-length
                      :OPACITY 0.2
                      :SIZE 3
                      :COLOR "species"}))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"sepal-length","type":"quantitative"},"color":{"field":"species","type":"nominal"},"size":{"value":3},"opacity":{"value":0.2},"x":{"field":"sepal-width","type":"quantitative"},"y2":{"field":"petal-length","type":"quantitative"},"x2":{"field":"petal-width","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":"rule","width":400,"background":"floralwhite","height":300,"data":{"url":"visualization_files\/2.csv","format":{"type":"csv"}}});</script></div>
```



### Grouped datasets

Grouped datasets are handled automatically with a table view.


::: {.sourceClojure}
```clojure
(-> datasets/iris
    (tc/group-by [:species])
    (vis.hanami/plot vht/rule-chart
                     {:X :sepal-width
                      :Y :sepal-length
                      :X2 :petal-width
                      :Y2 :petal-length
                      :OPACITY 0.2
                      :SIZE 3}))
```
:::



```{=html}
<table class="table table-hover table-responsive"><thead><tr><th>:species</th><th>:plot</th></tr></thead><tbody><tr><td><span data-qmd="setosa"></span></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"sepal-length","type":"quantitative"},"size":{"value":3},"opacity":{"value":0.2},"x":{"field":"sepal-width","type":"quantitative"},"y2":{"field":"petal-length","type":"quantitative"},"x2":{"field":"petal-width","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":"rule","width":400,"background":"floralwhite","height":300,"data":{"url":"visualization_files\/3.csv","format":{"type":"csv"}}});</script></div></td></tr><tr><td><span data-qmd="versicolor"></span></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"sepal-length","type":"quantitative"},"size":{"value":3},"opacity":{"value":0.2},"x":{"field":"sepal-width","type":"quantitative"},"y2":{"field":"petal-length","type":"quantitative"},"x2":{"field":"petal-width","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":"rule","width":400,"background":"floralwhite","height":300,"data":{"url":"visualization_files\/4.csv","format":{"type":"csv"}}});</script></div></td></tr><tr><td><span data-qmd="virginica"></span></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"sepal-length","type":"quantitative"},"size":{"value":3},"opacity":{"value":0.2},"x":{"field":"sepal-width","type":"quantitative"},"y2":{"field":"petal-length","type":"quantitative"},"x2":{"field":"petal-width","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":"rule","width":400,"background":"floralwhite","height":300,"data":{"url":"visualization_files\/5.csv","format":{"type":"csv"}}});</script></div></td></tr></tbody></table>
```



### Layers


::: {.sourceClojure}
```clojure
(-> random-walk
    (vis.hanami/layers
     {:TITLE "points and a line"}
     [(vis.hanami/plot nil
                       ht/point-chart
                       {:MSIZE 400})
      (vis.hanami/plot nil
                       ht/line-chart
                       {:MSIZE 4
                        :MCOLOR "brown"})]))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"usermeta":{"embedOptions":{"renderer":"svg"}},"width":400,"background":"floralwhite","title":{"text":"points and a line"},"layer":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":400,"background":"floralwhite","height":300},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300,"data":{"url":"visualization_files\/0.csv","format":{"type":"csv"}}});</script></div>
```


Alternatively:


::: {.sourceClojure}
```clojure
(-> random-walk
    (vis.hanami/combined-plot
     ht/layer-chart
     {:TITLE "points and a line"}
     :LAYER [[ht/point-chart
              {:MSIZE 400}]
             [ht/line-chart
              {:MSIZE 4
               :MCOLOR "brown"}]]))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"usermeta":{"embedOptions":{"renderer":"svg"}},"width":400,"background":"floralwhite","title":{"text":"points and a line"},"layer":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":400,"background":"floralwhite","title":{"text":"points and a line"},"height":300},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":400,"background":"floralwhite","title":{"text":"points and a line"},"height":300}],"height":300,"data":{"url":"visualization_files\/0.csv","format":{"type":"csv"}}});</script></div>
```



### Concatenation

Vertical


::: {.sourceClojure}
```clojure
(-> random-walk
    (vis.hanami/vconcat
     {}
     [(vis.hanami/plot nil
                       ht/point-chart
                       {:MSIZE 400
                        :HEIGHT 100
                        :WIDTH 100})
      (vis.hanami/plot nil
                       ht/line-chart
                       {:MSIZE 4
                        :MCOLOR "brown"
                        :HEIGHT 100
                        :WIDTH 100})]))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"usermeta":{"embedOptions":{"renderer":"svg"}},"width":400,"background":"floralwhite","vconcat":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":100,"background":"floralwhite","height":100},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":100,"background":"floralwhite","height":100}],"height":300,"data":{"url":"visualization_files\/0.csv","format":{"type":"csv"}}});</script></div>
```


Alternatively:


::: {.sourceClojure}
```clojure
(-> random-walk
    (vis.hanami/combined-plot
     ht/vconcat-chart
     {:HEIGHT 100
      :WIDTH 100}
     :VCONCAT [[ht/point-chart
                {:MSIZE 400}]
               [ht/line-chart
                {:MSIZE 4
                 :MCOLOR "brown"}]]))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"usermeta":{"embedOptions":{"renderer":"svg"}},"width":100,"background":"floralwhite","vconcat":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":100,"background":"floralwhite","height":100},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":100,"background":"floralwhite","height":100}],"height":100,"data":{"url":"visualization_files\/0.csv","format":{"type":"csv"}}});</script></div>
```


Horizontal


::: {.sourceClojure}
```clojure
(-> random-walk
    (vis.hanami/hconcat
     {}
     [(vis.hanami/plot nil
                       ht/point-chart
                       {:MSIZE 400
                        :HEIGHT 100
                        :WIDTH 100})
      (vis.hanami/plot nil
                       ht/line-chart
                       {:MSIZE 4
                        :MCOLOR "brown"
                        :HEIGHT 100
                        :WIDTH 100})]))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"hconcat":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":100,"background":"floralwhite","height":100},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":100,"background":"floralwhite","height":100}],"usermeta":{"embedOptions":{"renderer":"svg"}},"width":400,"background":"floralwhite","height":300,"data":{"url":"visualization_files\/0.csv","format":{"type":"csv"}}});</script></div>
```


Alternatively:


::: {.sourceClojure}
```clojure
(-> random-walk
    (vis.hanami/combined-plot
     ht/hconcat-chart
     {:HEIGHT 100
      :WIDTH 100}
     :HCONCAT [[ht/point-chart
                {:MSIZE 400}]
               [ht/line-chart
                {:MSIZE 4
                 :MCOLOR "brown"}]]))
```
:::



```{=html}
<div><script>vegaEmbed(document.currentScript.parentElement, {"hconcat":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":100,"background":"floralwhite","height":100},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"usermeta":{"embedOptions":{"renderer":"svg"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":100,"background":"floralwhite","height":100}],"usermeta":{"embedOptions":{"renderer":"svg"}},"width":100,"background":"floralwhite","height":100,"data":{"url":"visualization_files\/0.csv","format":{"type":"csv"}}});</script></div>
```



::: {.sourceClojure}
```clojure
:bye
```
:::



::: {.printedClojure}
```clojure
:bye

```
:::



```{=html}
<div style="background-color:grey;height:2px;width:100%;"></div>
```



```{=html}
<div><pre><small><small>source: <a href="https://github.com/scicloj/noj/blob/main/notebooks/visualization.clj">notebooks/visualization.clj</a></small></small></pre></div>
```
